# =============================================================================
# QueryGenie Environment Configuration
# =============================================================================
# Copy this file to .env.local and fill in your values
# For local development, you only need the first few variables

# =============================================================================
# Database Configuration
# =============================================================================
# Local PostgreSQL (from docker-compose)
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/querygenie"

# Production: Neon PostgreSQL URL
# DATABASE_URL="postgresql://username:password@ep-xxx.us-east-1.aws.neon.tech/querygenie?sslmode=require"

# =============================================================================
# Authentication Configuration
# =============================================================================
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET="your-super-secret-jwt-key-change-in-production"

# Your app URL
NEXTAUTH_URL="http://localhost:3000"

# Production URL
# NEXTAUTH_URL="https://querygenie.com"

# =============================================================================
# OAuth Providers (Optional for local development)
# =============================================================================
# Google OAuth
# Get from: https://console.developers.google.com
GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# GitHub OAuth
# Get from: https://github.com/settings/applications/new
GITHUB_CLIENT_ID="your-github-client-id"
GITHUB_CLIENT_SECRET="your-github-client-secret"

# =============================================================================
# AI Configuration
# =============================================================================
# Gemini API Key (Free tier available)
# Get from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY="your-gemini-api-key"

# Optional: For users who want to use their own keys
# OPENAI_API_KEY="sk-..."
# ANTHROPIC_API_KEY="sk-ant-..."

# =============================================================================
# Redis Configuration (Optional - for caching)
# =============================================================================
# Local Redis (from docker-compose)
REDIS_URL="redis://:redis123@localhost:6379"

# Production: Upstash Redis URL
# UPSTASH_REDIS_URL="rediss://xxx.upstash.io:6380"
# UPSTASH_REDIS_TOKEN="your-upstash-token"

# =============================================================================
# Storage Configuration (Optional - for file uploads)
# =============================================================================
# Cloudflare R2 (S3-compatible)
# R2_ENDPOINT="https://xxx.r2.cloudflarestorage.com"
# R2_ACCESS_KEY_ID="your-access-key"
# R2_SECRET_ACCESS_KEY="your-secret-key"
# R2_BUCKET_NAME="querygenie-files"

# =============================================================================
# Email Configuration (Optional - for notifications)
# =============================================================================
# Resend (for production emails)
# RESEND_API_KEY="re_xxx"

# Local development (MailHog)
SMTP_HOST="localhost"
SMTP_PORT="1025"
SMTP_USER=""
SMTP_PASSWORD=""

# =============================================================================
# Monitoring & Analytics (Optional)
# =============================================================================
# Sentry for error tracking
# SENTRY_DSN="https://xxx.ingest.sentry.io/xxx"

# PostHog for analytics
# NEXT_PUBLIC_POSTHOG_KEY="phc_xxx"
# NEXT_PUBLIC_POSTHOG_HOST="https://app.posthog.com"

# =============================================================================
# Feature Flags (Development)
# =============================================================================
# Enable mock AI responses for testing
ENABLE_MOCK_AI="false"

# Enable debug mode
ENABLE_DEBUG_MODE="true"

# Enable experimental features
ENABLE_EXPERIMENTAL="false"

# =============================================================================
# Security Configuration
# =============================================================================
# Rate limiting
RATE_LIMIT_MAX="100"
RATE_LIMIT_WINDOW="900000" # 15 minutes in ms

# CORS origins (comma-separated)
ALLOWED_ORIGINS="http://localhost:3000,http://127.0.0.1:3000"

# =============================================================================
# Node.js Configuration
# =============================================================================
NODE_ENV="development"
LOG_LEVEL="info"

# Increase memory limit for large schema processing
NODE_OPTIONS="--max-old-space-size=4096"